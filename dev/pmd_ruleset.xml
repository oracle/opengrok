<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="Custom ruleset for OpenGrok"
    xmlns="http://pmd.sf.net/ruleset/1.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd"
    xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd">

  <description>
  Settings for PMD, tuned for the OpenGrok project.
  </description>
  <rule ref="category/java/errorprone.xml/AvoidDuplicateLiterals"/>
  <rule ref="category/java/errorprone.xml/StringBufferInstantiationWithChar"/>
  <rule ref="category/java/errorprone.xml/UnnecessaryCaseChange"/>
  <rule ref="category/java/errorprone.xml/UseEqualsToCompareStrings"/>
  <rule ref="category/java/bestpractices.xml/AvoidStringBufferField"/>
  <rule ref="category/java/performance.xml/AppendCharacterWithChar"/>
  <rule ref="category/java/performance.xml/ConsecutiveAppendsShouldReuse"/>
  <rule ref="category/java/performance.xml/ConsecutiveLiteralAppends"/>
  <rule ref="category/java/performance.xml/InefficientEmptyStringCheck"/>
  <rule ref="category/java/performance.xml/InefficientStringBuffering"/>
  <rule ref="category/java/performance.xml/InsufficientStringBufferDeclaration"/>
  <rule ref="category/java/performance.xml/StringInstantiation"/>
  <rule ref="category/java/performance.xml/StringToString"/>
  <rule ref="category/java/performance.xml/UseIndexOfChar"/>
  <rule ref="category/java/performance.xml/UselessStringValueOf"/>
  <rule ref="category/java/performance.xml/UseStringBufferLength"/>
  <rule ref="category/java/errorprone.xml/AvoidBranchingStatementAsLastInLoop"/>
  <rule ref="category/java/errorprone.xml/AvoidDecimalLiteralsInBigDecimalConstructor"/>
  <rule ref="category/java/errorprone.xml/AvoidMultipleUnaryOperators"/>
  <rule ref="category/java/errorprone.xml/AvoidUsingOctalValues"/>
  <rule ref="category/java/errorprone.xml/BrokenNullCheck"/>
  <rule ref="category/java/errorprone.xml/CheckSkipResult"/>
  <rule ref="category/java/errorprone.xml/ClassCastExceptionWithToArray"/>
  <rule ref="category/java/errorprone.xml/DontUseFloatTypeForLoopIndices"/>
  <rule ref="category/java/errorprone.xml/JumbledIncrementer"/>
  <rule ref="category/java/errorprone.xml/MisplacedNullCheck"/>
  <rule ref="category/java/errorprone.xml/OverrideBothEqualsAndHashcode"/>
  <rule ref="category/java/errorprone.xml/ReturnFromFinallyBlock"/>
  <rule ref="category/java/errorprone.xml/UnconditionalIfStatement"/>
  <rule ref="category/java/multithreading.xml/AvoidThreadGroup"/>
  <rule ref="category/java/multithreading.xml/DontCallThreadRun"/>
  <rule ref="category/java/multithreading.xml/DoubleCheckedLocking"/>
  <rule ref="category/java/bestpractices.xml/AvoidUsingHardCodedIP"/>
  <rule ref="category/java/bestpractices.xml/CheckResultSet"/>
  <rule ref="category/java/codestyle.xml/ExtendsObject"/>
  <rule ref="category/java/codestyle.xml/ForLoopShouldBeWhileLoop"/>
  <rule ref="category/java/performance.xml/BigIntegerInstantiation"/>
  <rule ref="category/java/design.xml/CollapsibleIfStatements"/>
  <rule ref="category/java/design.xml/SimplifiedTernary"/>
  <rule ref="category/java/errorprone.xml/CloneMethodMustBePublic" />
  <rule ref="category/java/errorprone.xml/CloneMethodMustImplementCloneable" />
  <rule ref="category/java/errorprone.xml/CloneMethodReturnTypeMustMatchClassName" />
  <rule ref="category/java/errorprone.xml/ProperCloneImplementation" />
  <rule ref="category/java/design.xml/AbstractClassWithoutAnyMethod" />
  <rule ref="category/java/design.xml/AvoidDeeplyNestedIfStmts" />
  <rule ref="category/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal" />
  <rule ref="category/java/design.xml/DataClass" />
  <rule ref="category/java/design.xml/FinalFieldCouldBeStatic" />
  <rule ref="category/java/design.xml/GodClass" />
  <rule ref="category/java/design.xml/ImmutableField" />
  <rule ref="category/java/design.xml/LogicInversion" />
  <rule ref="category/java/design.xml/SimplifyBooleanExpressions" />
  <rule ref="category/java/design.xml/SimplifyBooleanReturns" />
  <rule ref="category/java/design.xml/SimplifyConditional" />
  <rule ref="category/java/design.xml/SingularField" />
  <rule ref="category/java/design.xml/SwitchDensity" />
  <rule ref="category/java/design.xml/UseUtilityClass" />
  <rule ref="category/java/errorprone.xml/AssignmentToNonFinalStatic" />
  <rule ref="category/java/errorprone.xml/AvoidInstanceofChecksInCatchClause" />
  <rule ref="category/java/errorprone.xml/CloseResource" />
  <rule ref="category/java/errorprone.xml/CompareObjectsWithEquals" />
  <rule ref="category/java/errorprone.xml/ConstructorCallsOverridableMethod" />
  <rule ref="category/java/errorprone.xml/EqualsNull" />
  <rule ref="category/java/errorprone.xml/IdempotentOperations" />
  <rule ref="category/java/errorprone.xml/InstantiationToGetClass" />
  <rule ref="category/java/errorprone.xml/MissingStaticMethodInNonInstantiatableClass" />
  <rule ref="category/java/errorprone.xml/NonCaseLabelInSwitchStatement" />
  <rule ref="category/java/errorprone.xml/NonStaticInitializer" />
  <rule ref="category/java/errorprone.xml/SimpleDateFormatNeedsLocale" />
  <rule ref="category/java/errorprone.xml/SingleMethodSingleton" />
  <rule ref="category/java/errorprone.xml/SingletonClassReturningNewInstance" />
  <rule ref="category/java/errorprone.xml/UseLocaleWithCaseConversions" />
  <rule ref="category/java/codestyle.xml/AvoidProtectedFieldInFinalClass" />
  <rule ref="category/java/codestyle.xml/AvoidProtectedMethodInFinalClassNotExtending" />
  <rule ref="category/java/codestyle.xml/ConfusingTernary" />
  <rule ref="category/java/codestyle.xml/EmptyMethodInAbstractClassShouldBeAbstract" />
  <rule ref="category/java/codestyle.xml/FieldDeclarationsShouldBeAtStartOfClass" />
  <rule ref="category/java/codestyle.xml/UnnecessaryLocalBeforeReturn" />
  <rule ref="category/java/multithreading.xml/AvoidSynchronizedAtMethodLevel" />
  <rule ref="category/java/multithreading.xml/NonThreadSafeSingleton" />
  <rule ref="category/java/multithreading.xml/UseNotifyAllInsteadOfNotify" />
  <rule ref="category/java/bestpractices.xml/AbstractClassWithoutAbstractMethod" />
  <rule ref="category/java/bestpractices.xml/AccessorClassGeneration" />
  <rule ref="category/java/bestpractices.xml/AccessorMethodGeneration" />
  <rule ref="category/java/bestpractices.xml/AvoidReassigningParameters" />
  <rule ref="category/java/bestpractices.xml/ConstantsInInterface" />
  <rule ref="category/java/bestpractices.xml/DefaultLabelNotLastInSwitchStmt" />
  <rule ref="category/java/bestpractices.xml/PreserveStackTrace" />
  <rule ref="category/java/bestpractices.xml/SwitchStmtsShouldHaveDefault" />
  <rule ref="category/java/bestpractices.xml/UseCollectionIsEmpty" />
  <rule ref="category/java/bestpractices.xml/UseVarargs" />
  <rule ref="category/java/performance.xml/OptimizableToArrayCall" />
  <rule ref="category/java/performance.xml/TooFewBranchesForASwitchStatement" />
  <rule ref="category/java/documentation.xml/UncommentedEmptyConstructor" />
  <rule ref="category/java/documentation.xml/UncommentedEmptyMethodBody" />
  <rule ref="category/java/errorprone.xml/AvoidCallingFinalize" />
  <rule ref="category/java/errorprone.xml/EmptyFinalizer" />
  <rule ref="category/java/errorprone.xml/FinalizeDoesNotCallSuperFinalize" />
  <rule ref="category/java/errorprone.xml/FinalizeOnlyCallsSuperFinalize" />
  <rule ref="category/java/errorprone.xml/FinalizeOverloaded" />
  <rule ref="category/java/errorprone.xml/FinalizeShouldBeProtected" />
  <rule ref="category/java/codestyle.xml/TooManyStaticImports" />
  <rule ref="category/java/codestyle.xml/UnnecessaryFullyQualifiedName" />
  <rule ref="category/java/codestyle.xml/ControlStatementBraces"/>
  <rule ref="category/java/errorprone.xml/JUnitSpelling"/>
  <rule ref="category/java/errorprone.xml/JUnitStaticSuite"/>
  <rule ref="category/java/errorprone.xml/TestClassWithoutTestCases"/>
  <rule ref="category/java/errorprone.xml/UnnecessaryBooleanAssertion"/>
  <rule ref="category/java/bestpractices.xml/JUnitTestContainsTooManyAsserts"/>
  <rule ref="category/java/bestpractices.xml/JUnitTestsShouldIncludeAssert"/>
  <rule ref="category/java/errorprone.xml/MoreThanOneLogger" />
  <rule ref="category/java/bestpractices.xml/AvoidPrintStackTrace" />
  <rule ref="category/java/bestpractices.xml/GuardLogStatement" name="GuardLogStatementJavaUtil" />
  <rule ref="category/java/bestpractices.xml/SystemPrintln" />
  <rule ref="category/java/errorprone.xml/AvoidAssertAsIdentifier" />
  <rule ref="category/java/errorprone.xml/AvoidEnumAsIdentifier" />
  <rule ref="category/java/bestpractices.xml/ForLoopCanBeForeach" />
  <rule ref="category/java/bestpractices.xml/JUnit4SuitesShouldUseSuiteAnnotation" />
  <rule ref="category/java/bestpractices.xml/JUnit4TestShouldUseAfterAnnotation" />
  <rule ref="category/java/bestpractices.xml/JUnit4TestShouldUseBeforeAnnotation" />
  <rule ref="category/java/bestpractices.xml/JUnit4TestShouldUseTestAnnotation" />
  <rule ref="category/java/bestpractices.xml/JUnitUseExpected" />
  <rule ref="category/java/bestpractices.xml/ReplaceEnumerationWithIterator" />
  <rule ref="category/java/bestpractices.xml/ReplaceHashtableWithMap" />
  <rule ref="category/java/bestpractices.xml/ReplaceVectorWithList" />
  <rule ref="category/java/codestyle.xml/PrematureDeclaration"/>
  <rule ref="category/java/performance.xml/AddEmptyString"/>
  <rule ref="category/java/performance.xml/AvoidArrayLoops"/>
  <rule ref="category/java/performance.xml/RedundantFieldInitializer"/>
  <rule ref="category/java/performance.xml/UseArrayListInsteadOfVector"/>
  <rule ref="category/java/performance.xml/UseArraysAsList"/>
  <rule ref="category/java/performance.xml/UseStringBufferForStringAppends"/>

  <rule ref="category/java/errorprone.xml/AvoidCatchingNPE" />
  <rule ref="category/java/errorprone.xml/AvoidCatchingThrowable" />
  <rule ref="category/java/errorprone.xml/AvoidLosingExceptionInformation" />
  <rule ref="category/java/errorprone.xml/DoNotThrowExceptionInFinally" />
  <rule ref="category/java/design.xml/AvoidCatchingGenericException" />
  <rule ref="category/java/design.xml/AvoidRethrowingException" />
  <rule ref="category/java/design.xml/AvoidThrowingNewInstanceOfSameException" />
  <rule ref="category/java/design.xml/AvoidThrowingNullPointerException" />
  <rule ref="category/java/design.xml/AvoidThrowingRawExceptionTypes" />
  <rule ref="category/java/design.xml/DoNotExtendJavaLangError" />
  <rule ref="category/java/design.xml/ExceptionAsFlowControl" />
  <rule ref="category/java/design.xml/SignatureDeclareThrowsException" />
  <rule ref="category/java/bestpractices.xml/ArrayIsStoredDirectly" />
  <rule ref="category/java/bestpractices.xml/MethodReturnsInternalArray" />
  <rule ref="category/java/bestpractices.xml/LooseCoupling" />
  <rule ref="category/java/bestpractices.xml/UnusedFormalParameter" />
  <rule ref="category/java/bestpractices.xml/UnusedLocalVariable" />
  <rule ref="category/java/bestpractices.xml/UnusedPrivateField" />
  <rule ref="category/java/bestpractices.xml/UnusedPrivateMethod" />
  <rule ref="category/java/errorprone.xml/MissingSerialVersionUID" />

</ruleset>
